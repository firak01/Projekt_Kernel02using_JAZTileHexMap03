#
# Automatisch durch Log4jPropertyGeneratorZZZ aus einem Pattern-File generiertes property file für log4j.
# Das Pattern-File ist eine Alternative zur default-Konfiguration (Default Konfiguration �ber eine entsprechende property der Log4jPropertyGenaratorZZZ - Klasse).
# Merke1: In den "Pattern" für die Konfiguration sind immer Platzhalter mit @@xyz@@ vorgesehen,
#             die Werte für diese Platzhalter werden in der (private) Methode .replacePlaceHolderAll(..) der Log4jPropertyGenaratorZZZ - Klasse ersetzt.
# 
# Merke2: 
# java -Dlog4j.configuration=customNam kann die Default-Datei ändern 
# 
# Merke3:
# Ohne die Datei gibt es folgende Fehlermeldung auf der Konsole:
#  'No appenders could be found for logger (org.jboss.logging).

log4j.rootLogger=DEBUG, STDOUTLOGGER, FILEAPPENDER


#################################################################
### Definition for Stdout logger
#################################################################

log4j.appender.STDOUTLOGGER=org.apache.log4j.ConsoleAppender
log4j.appender.STDOUTLOGGER.layout=org.apache.log4j.PatternLayout

# Pattern to output the caller's file name and line number.
log4j.appender.STDOUTLOGGER.layout.ConversionPattern=%d [%t] %-5p %c - %m%n

#################################################################
### Definition for FILEAPPENDER, write to a html file
#################################################################

log4j.appender.FILEAPPENDER=org.apache.log4j.FileAppender
log4j.appender.FILEAPPENDER.File=c:\\server\\temp\\log\\mylogTileHexMap03.html

log4j.appender.FILEAPPENDER.layout=org.apache.log4j.HTMLLayout

# Pattern to output the caller's file name and line number.
#log4j:WARN No such property [conversionPattern] in org.apache.log4j.HTMLLayout.  ??? Wie kann man die Ausgabe dann steuern ???
#log4j.appender.FILEAPPENDER.layout.ConversionPattern=%d [%t] %-5p %c - %m%n
 
  
 #################################################################
 ### Speziel für HIBERNATE 
 #################################################################
 # basic log level for all messages. FGL: Also auch für info, warning. Debug wird wohl weiter unten dann angestellt.
 # gibt dann überhautp nix aus log4j.logger.org.hibernate=debug
log4j.logger.org.hibernate=info
 
###Log all JDBC parmeters
log4j.logger.org.hibernate.type=ALL
 
### SQL statements and parameters
log4j.logger.org.hibernate.SQL=debug
log4j.logger.org.hibernate.type.descriptor.sql=trace
 
###Log all JDBC parameters
log4j.logger.org.hibernate.type=debug
  
###Log all SQL DDL statements as they are executed
log4j.logger.org.hibernate.tool.hbm2ddl=debug
 
### Log the state of all entities (max 20 entities) associated with the session at flush time
log4j.logger.org.hibernate.pretty=debug
 
### Log all second-level cache activity
log4j.logger.org.hibernate.cache
 
### Log transaction related activity
log4j.logger.org.hibernate.transaction=debug
 
### Log all JDBC resource acquisition
log4j.logger.org.hibernate.jdbc=debug
 
### Log HQL and SQL ASTs during query parsing
log4j.logger.org.hibernate.hql.ast.AST=debug
 
### Log all JAAS authorization requests
log4j.logger.org.hibernate.secure=debug
 
### Log everything (a lot of information, but very useful for troubleshooting) 
log4j.logger.org.hibernate=debug
  
###Log opening and closing of sessions
# klappt aber nicht
#log4j.logger.org.hibernate.impl.SessionImpl=trace
#log4j.rootLogger=TRACE